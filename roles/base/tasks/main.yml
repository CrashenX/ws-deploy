- name: Creates unprivileged user
  user: name={{ user }}
        password={{ password }}
        groups="sudo"
        generate_ssh_key=yes
        ssh_key_bits=4096
        ssh_key_file=.ssh/id_rsa
        shell=/bin/bash

- name: Adds authorized key
  authorized_key: user={{ item }}
                  key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  with_items:
    - root
    - "{{ user }}"

- name: Locks root password
  command: passwd -l root

- name: Disallows ssh password authentication
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PasswordAuthentication"
              line="PasswordAuthentication no"
              state=present
  notify: Restart ssh

- name: Updates current dist
  apt: update_cache=yes upgrade=dist

- name: Updates apt sources list
  copy: src=sources.list
        dest=/etc/apt/sources.list
        owner=root
        group=root
        mode=0644

- name: Updates to Sid
  apt: update_cache=yes upgrade=dist

- name: Installs packages
  apt: pkg={{ item }} state=latest
  with_items:
    - fail2ban
    - gnupg
    - netfilter-persistent
    - unattended-upgrades
    - vim
    - virtualbox-guest-*

- name: Ensures iptables directory exists
  file: path=/etc/iptables/
        state=directory
        owner=root
        group=root
        mode=755

- name: Installs fw rules
  copy: src={{ item }}
        dest=/etc/iptables/{{ item }}
        owner=root
        group=root
        mode=0644
  with_items:
    - rules.v4
    - rules.v6

- service: name=netfilter-persistent state=restarted

- name: Copies ssh public key
  copy: content="{{ ssh_public_key }}"
        dest=/home/{{ user }}/.ssh/id_rsa.pub
        owner={{ user }}
        group={{ user }}
        mode=0400
  no_log: true

- name: Copies ssh private key
  copy: content="{{ ssh_private_key }}"
        dest=/home/{{ user }}/.ssh/id_rsa
        owner={{ user }}
        group={{ user }}
        mode=0400
  no_log: true

- name: Copies gpg public key
  copy: content="{{ gpg_public_key }}"
        dest=/home/{{ user }}/my-public-key.asc
        owner={{ user }}
        group={{ user }}
        mode=0400
  no_log: true

- name: Copies gpg private key
  copy: content="{{ gpg_private_key }}"
        dest=/home/{{ user }}/my-private-key.asc
        owner={{ user }}
        group={{ user }}
        mode=0400
  no_log: true

- name: Import gpg keys
  command: gpg --import {{ item }}
  with_items:
    - my-public-key.asc
    - my-private-key.asc

- name: Restricts access to unprivileged user files
  file: path=/home/{{ user }} state=directory recurse=yes mode="o-rwx"
